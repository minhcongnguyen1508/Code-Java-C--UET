/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab10_dbms;
import java.sql.*;

/**
 *
 * @author Cong
 */
public class Lab10_DBMS {

    /**
     * @param args the command line arguments
     */
    private Connection conn = null;
    public static void main(String[] args) {
        // TODO code application logic here
        System.out.println(connectMySql());
        getFilmResult(connectMySql());
        insertIntoActor(connectMySql(), "MinhCong", "Nguyen");
        transaction(connectMySql());
    }
    public static Connection connectMySql(){
        try{
            Class.forName("com.mysql.jdbc.Driver").newInstance();
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sakila", "root", "15082907");
            return conn;
        }catch(Exception ex){
            System.out.println("fail.");
            System.out.println(ex.getMessage());
        }
        return null;
    }
    public static void getFilmResult(Connection connection){
        String strQ = "select * from film f join film_actor fc on(f.film_id=fc.film_id) where actor_id = 1 group by f.film_id";
        try (
             PreparedStatement stmt  = connection.prepareStatement(strQ);
             ResultSet rset = stmt.executeQuery())
        {
            // loop through the result set
            while (rset.next()) {
                  System.out.println(rset.getString("film_id")+ "\t" +
                     rset.getString("title"));
            }
        } catch (SQLException ex){
            System.out.println(ex.getMessage());
        }finally{
        }
    }
    public static int insertIntoActor(Connection connection,String fistName, String lastName){
        String strQ = "INSERT INTO actor (first_name, last_name) VALUES (?, ?)";
        
        try (PreparedStatement stmt = connection.prepareStatement(strQ,PreparedStatement.RETURN_GENERATED_KEYS)){
            stmt.setString(1, fistName);
            stmt.setString(2, lastName);
            stmt.executeUpdate();
            ResultSet rset = stmt.getGeneratedKeys();
            int id = 0;
            if(rset.next()){
                id = rset.getInt(1);
                System.out.println("ActorID: " + id);
            }
            return id;
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        
        return -1;
    }
    
    public static void transaction(Connection connection){
        String strQ = "INSERT INTO rental (rental_id,rental_date,inventory_id,customer_id,staff_id) VALUES (?,now(),?,?,?)";
        PreparedStatement pstmt = null;
        try { 
            connection.setAutoCommit(false);
            pstmt = connection.prepareStatement(strQ);
            //Lan 1
            pstmt.setInt(1, 17020618);
            pstmt.setInt(2, 1);
            pstmt.setInt(3, 2);
            pstmt.setInt(4, 3);
            
            pstmt.executeUpdate();
            //Lan 2
	    pstmt.setInt(1, 17020618);
            pstmt.setInt(2, 1);
            pstmt.setInt(3, 2);
            pstmt.setInt(4, 3);
            
            pstmt.executeUpdate();
            connection.commit();
        } catch (SQLException e) {
            try {
                System.out.println("-- Rolling back change --");
                connection.rollback();
                System.out.println(e.getMessage());
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        } finally{
            try {
                if(pstmt != null) pstmt.close();
                if(connection != null) connection.close();
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }
}
